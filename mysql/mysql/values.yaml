## mysql镜像版本
## 参考: https://hub.docker.com/r/library/mysql/tags/
##
image: "mysql"
imageTag: "5.7.14"

## root用户密码
##
## 默认值: 随机10个字符串
# mysqlRootPassword: testing

## 创建一个数据库用户更
##
# mysqlUser:
## 默认值: 随机10个字符串
# mysqlPassword:

## 允许未经身份验证的访问，启用uncomment
##
# mysqlAllowEmptyPassword: true

## 创建一个数据库
##
# mysqlDatabase:

## 声明镜像拉取策略(必填项)
## 如果镜像标签是'latest'，建议将其更改为'Always'
## 参考: http://kubernetes.io/docs/user-guide/images/#updating-images
##
imagePullPolicy: IfNotPresent

# 非必填项，声明一串imagePullSecrets数组。
# Secrets必须在namspace里人工创建。
# 参考: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
# imagePullSecrets:
  # - name: myRegistryKeySecretName

## 节点选择器
## 参考: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
nodeSelector: {}

livenessProbe:
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

readinessProbe:
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3

## 将数据持久化到一个持久卷中
persistence:
  enabled: true
  ## 数据库库数据PV存储类
  ## 如果定义了, storageClassName: <storageClass>
  ## 如果设置为"-", storageClassName: ""将禁用动态配置
  ## 如果未定义或者设置为空将不设置存储类名称，并且选择默认厂商。
  ## (gp2 on AWS, standard on GKE, AWS & OpenStack)
  # storageClass: "-"
  ## 选择已有的PVC
  ## existingClaim: "-"
  accessMode: ReadWriteOnce
  size: 8Gi

## 配置资源请求和极限值
## 参考: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  requests:
    memory: 256Mi
    cpu: 100m

# 自定义mysql配置文件来覆盖mysql设置
configurationFiles:
#  mysql.cnf: |-
#    [mysqld]
#    skip-name-resolve
#    ssl-ca=/ssl/ca.pem
#    ssl-cert=/ssl/server-cert.pem
#    ssl-key=/ssl/server-key.pem

# 自定义mysql初始化配置文件来初始化数据库库
initializationFiles:
#  first-db.sql: |-
#    CREATE DATABASE IF NOT EXISTS first DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
#  second-db.sql: |-
#    CREATE DATABASE IF NOT EXISTS second DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;

## 配置服务
## 参考: http://kubernetes.io/docs/user-guide/services/
service:
  ## 声明服务类型
  ## 参考: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services---service-types
  # type: NodePort
  type: ClusterIP
  port: 3306
  # nodePort: 32000

ssl:
  enabled: false
  secret: mysql-ssl-certs
  certificates:
#  - name: mysql-ssl-certs
#    ca: |-
#      -----BEGIN CERTIFICATE-----
#      ...
#      -----END CERTIFICATE-----
#    cert: |-
#      -----BEGIN CERTIFICATE-----
#      ...
#      -----END CERTIFICATE-----
#    key: |-
#      -----BEGIN RSA PRIVATE KEY-----
#      ...
#      -----END RSA PRIVATE KEY-----
